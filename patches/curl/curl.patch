From 7696a5a455df17e54a74f2508b289c340f46c928 Mon Sep 17 00:00:00 2001
From: konect-V <66421869+konect-V@users.noreply.github.com>
Date: Mon, 17 Jun 2024 13:11:56 +0200
Subject: [PATCH 1/1] Port to Kot

---
 config.sub         |  2 +-
 lib/vtls/openssl.c | 68 ----------------------------------------------
 2 files changed, 1 insertion(+), 69 deletions(-)

diff --git a/config.sub b/config.sub
index dba16e8..dc0d387 100755
--- a/config.sub
+++ b/config.sub
@@ -1734,7 +1734,7 @@ case $os in
 	     | aos* | aros* | cloudabi* | sortix* | twizzler* \
 	     | nindy* | vxsim* | vxworks* | ebmon* | hms* | mvs* \
 	     | clix* | riscos* | uniplus* | iris* | isc* | rtu* | xenix* \
-	     | mirbsd* | netbsd* | dicos* | openedition* | ose* \
+	     | mirbsd* | netbsd* | dicos* | openedition* | ose* | kot* \
 	     | bitrig* | openbsd* | secbsd* | solidbsd* | libertybsd* | os108* \
 	     | ekkobsd* | freebsd* | riscix* | lynxos* | os400* \
 	     | bosx* | nextstep* | cxux* | aout* | elf* | oabi* \
diff --git a/lib/vtls/openssl.c b/lib/vtls/openssl.c
index a3953f6..f805048 100644
--- a/lib/vtls/openssl.c
+++ b/lib/vtls/openssl.c
@@ -1890,74 +1890,6 @@ static void ossl_close(struct Curl_cfilter *cf, struct Curl_easy *data)
   DEBUGASSERT(backend);
 
   if(backend->handle) {
-    /* Send the TLS shutdown if we are still connected *and* if
-     * the peer did not already close the connection. */
-    if(cf->next && cf->next->connected && !connssl->peer_closed) {
-      char buf[1024];
-      int nread, err;
-      long sslerr;
-
-      /* Maybe the server has already sent a close notify alert.
-         Read it to avoid an RST on the TCP connection. */
-      ERR_clear_error();
-      nread = SSL_read(backend->handle, buf, (int)sizeof(buf));
-      err = SSL_get_error(backend->handle, nread);
-      if(!nread && err == SSL_ERROR_ZERO_RETURN) {
-        CURLcode result;
-        ssize_t n;
-        size_t blen = sizeof(buf);
-        CURL_TRC_CF(data, cf, "peer has shutdown TLS");
-        /* SSL_read() will not longer touch the socket, let's receive
-         * directly from the next filter to see if the underlying
-         * connection has also been closed. */
-        n = Curl_conn_cf_recv(cf->next, data, buf, blen, &result);
-        if(!n) {
-          connssl->peer_closed = TRUE;
-          CURL_TRC_CF(data, cf, "peer closed connection");
-        }
-      }
-      ERR_clear_error();
-      if(connssl->peer_closed) {
-        /* As the peer closed, we do not expect it to read anything more we
-         * may send. It may be harmful, leading to TCP RST and delaying
-         * a lingering close. Just leave. */
-        CURL_TRC_CF(data, cf, "not from sending TLS shutdown on "
-                    "connection closed by peer");
-      }
-      else if(SSL_shutdown(backend->handle) == 1) {
-        CURL_TRC_CF(data, cf, "SSL shutdown finished");
-      }
-      else {
-        nread = SSL_read(backend->handle, buf, (int)sizeof(buf));
-        err = SSL_get_error(backend->handle, nread);
-        switch(err) {
-        case SSL_ERROR_NONE: /* this is not an error */
-        case SSL_ERROR_ZERO_RETURN: /* no more data */
-          CURL_TRC_CF(data, cf, "SSL shutdown, EOF from server");
-          break;
-        case SSL_ERROR_WANT_READ:
-          /* SSL has send its notify and now wants to read the reply
-           * from the server. We are not really interested in that. */
-          CURL_TRC_CF(data, cf, "SSL shutdown sent");
-          break;
-        case SSL_ERROR_WANT_WRITE:
-          CURL_TRC_CF(data, cf, "SSL shutdown send blocked");
-          break;
-        default:
-          sslerr = ERR_get_error();
-          CURL_TRC_CF(data, cf, "SSL shutdown, error: '%s', errno %d",
-                      (sslerr ?
-                       ossl_strerror(sslerr, buf, sizeof(buf)) :
-                       SSL_ERROR_to_str(err)),
-                      SOCKERRNO);
-          break;
-        }
-      }
-
-      ERR_clear_error();
-      SSL_set_connect_state(backend->handle);
-    }
-
     SSL_free(backend->handle);
     backend->handle = NULL;
   }
-- 
2.43.0
