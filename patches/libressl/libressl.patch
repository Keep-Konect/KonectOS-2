From ccfa1321f14bb4779b3ceda0f41fa9cdfc9cf299 Mon Sep 17 00:00:00 2001
From: konect-V <66421869+konect-V@users.noreply.github.com>
Date: Mon, 10 Jun 2024 13:08:04 +0200
Subject: [PATCH 1/1] Port libressl to Kot

---
 config.sub                      |  2 +-
 crypto/compat/arc4random.h      |  3 ++
 crypto/compat/arc4random_kot.h  | 56 +++++++++++++++++++++++++++++++++
 include/compat/machine/endian.h |  2 +-
 4 files changed, 61 insertions(+), 2 deletions(-)
 create mode 100644 crypto/compat/arc4random_kot.h

diff --git a/config.sub b/config.sub
index 0cd7016..29869b9 100755
--- a/config.sub
+++ b/config.sub
@@ -144,7 +144,7 @@ case $os in
 		;;
 	-dec* | -mips* | -sequent* | -encore* | -pc532* | -sgi* | -sony* | \
 	-att* | -7300* | -3300* | -delta* | -motorola* | -sun[234]* | \
-	-unicom* | -ibm* | -next | -hp | -isi* | -apollo | -altos* | \
+	-unicom* | -ibm* | -next | -hp | -isi* | -apollo | -altos* | -kot* | \
 	-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\
 	-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \
 	-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \
diff --git a/crypto/compat/arc4random.h b/crypto/compat/arc4random.h
index ffa3239..c362b10 100644
--- a/crypto/compat/arc4random.h
+++ b/crypto/compat/arc4random.h
@@ -15,6 +15,9 @@
 #elif defined(__linux__)
 #include "arc4random_linux.h"
 
+#elif defined(__kot__)
+#include "arc4random_kot.h"
+
 #elif defined(__midipix__)
 #include "arc4random_linux.h"
 
diff --git a/crypto/compat/arc4random_kot.h b/crypto/compat/arc4random_kot.h
new file mode 100644
index 0000000..db68119
--- /dev/null
+++ b/crypto/compat/arc4random_kot.h
@@ -0,0 +1,56 @@
+#include <sys/mman.h>
+
+#include <pthread.h>
+
+static pthread_mutex_t arc4random_mtx = PTHREAD_MUTEX_INITIALIZER;
+#define _ARC4_LOCK()   pthread_mutex_lock(&arc4random_mtx)
+#define _ARC4_UNLOCK() pthread_mutex_unlock(&arc4random_mtx)
+
+#define _ARC4_ATFORK(f) // pthread_atfork not implemented yet
+
+static inline void
+_getentropy_fail(void)
+{
+	raise(SIGKILL);
+}
+
+static volatile sig_atomic_t _rs_forked;
+
+static inline void
+_rs_forkhandler(void)
+{
+	_rs_forked = 1;
+}
+
+static inline void
+_rs_forkdetect(void)
+{
+	static pid_t _rs_pid = 0;
+	pid_t pid = getpid();
+
+        /* XXX unusual calls to clone() can bypass checks */
+	if (_rs_pid == 0 || _rs_pid == 1 || _rs_pid != pid || _rs_forked) {
+		_rs_pid = pid;
+		_rs_forked = 0;
+		if (rs)
+			memset(rs, 0, sizeof(*rs));
+	}
+}
+
+static inline int
+_rs_allocate(struct _rs **rsp, struct _rsx **rsxp)
+{
+	if ((*rsp = mmap(NULL, sizeof(**rsp), PROT_READ|PROT_WRITE,
+	    MAP_ANON|MAP_PRIVATE, -1, 0)) == MAP_FAILED)
+		return (-1);
+
+	if ((*rsxp = mmap(NULL, sizeof(**rsxp), PROT_READ|PROT_WRITE,
+	    MAP_ANON|MAP_PRIVATE, -1, 0)) == MAP_FAILED) {
+		munmap(*rsp, sizeof(**rsp));
+		*rsp = NULL;
+		return (-1);
+	}
+
+	_ARC4_ATFORK(_rs_forkhandler);
+	return (0);
+}
\ No newline at end of file
diff --git a/include/compat/machine/endian.h b/include/compat/machine/endian.h
index 4dcb60d..191cdc4 100644
--- a/include/compat/machine/endian.h
+++ b/include/compat/machine/endian.h
@@ -21,7 +21,7 @@
 #define BYTE_ORDER BIG_ENDIAN
 #endif
 
-#elif defined(__linux__) || defined(__midipix__)
+#elif defined(__linux__) || defined(__kot__)  || defined(__midipix__)
 #include <endian.h>
 
 #elif defined(__sun) || defined(_AIX) || defined(__hpux)
-- 
2.43.0

